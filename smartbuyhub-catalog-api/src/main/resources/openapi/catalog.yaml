openapi: 3.0.3
info:
  title: Catalog API
  version: 1.0.0
  description: API for managing product catalog

paths:
  /products:
    get:
      summary: Get all products
      operationId: getAllProducts
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDTO'
    put:
      summary: Import a list of products
      operationId: importProducts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductDTO'
      responses:
        '200':
          description: Products imported successfully

  /products/{id}:
    get:
      summary: Get a product by ID
      operationId: getProductById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
    put:
      summary: Update a product
      operationId: updateProduct
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDTO'
      responses:
        '200':
          description: Product updated
    delete:
      summary: Delete a product by ID
      operationId: deleteProduct
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Product deleted

  /products/{id}/deactivate:
    post:
      summary: Mark a product inactive by ID
      operationId: deactivateProduct
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Product marked inactive

components:
  schemas:
    ProductDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        sku:
          type: string
        price:
          type: number
          format: double
        categoryId:
          type: string
        brand:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: string
        inventoryCount:
          type: integer
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
      required:
        - id
        - name
        - sku
        - price
        - isActive
        - createdAt
        - updatedAt