openapi: 3.0.3
info:
  title: SmartBuyHub User API
  description: API for managing users in SmartBuyHub
  version: 1.0.0
paths:
  /users:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '400':
          description: Invalid input

    get:
      summary: Get list of users
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 0
        - in: query
          name: size
          schema:
            type: integer
            default: 10
        - in: query
          name: username
          schema:
            type: string
        - in: query
          name: city
          schema:
            type: string
        - in: query
          name: state
          schema:
            type: string
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'

  /users/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Found the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '404':
          description: User not found

    put:
      summary: Update a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '404':
          description: User not found
        '400':
          description: Invalid input

    delete:
      summary: Delete a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found

components:
  schemas:
    UserDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "b6a8e50f-8f9c-47b2-a877-e6d35c3c4fdd"
        username:
          type: string
          example: johndoe
        password:
          type: string
          format: password
          example: "secret123"
        fullname:
          type: string
          example: "John Doe"
        street:
          type: string
          example: "123 Main St"
        city:
          type: string
          example: "Springfield"
        state:
          type: string
          example: "IL"
        zip:
          type: string
          example: "62704"
        phoneNumber:
          type: string
          example: "555-123-4567"
      required:
        - username
        - password
        - fullname
        - street
        - city
        - state
        - zip
        - phoneNumber